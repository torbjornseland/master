TITLE: Presentation of project in inf5631
AUTHOR: Torbj√∏rn Seland
DATE: today


#doconce format html project_torbjorn.do.txt --pygments_html_style=native --keep_pygments_html_bg --encoding=utf-8
#doconce slides_html project_torbjorn reveal --html_slide_theme=darkgray
!split
======= Short presentation of project =======
Study of the Density-Dependent Diffusion-Reaction-Diffusion Model Ref.(ref{eq:reaction_diffusion})
!bt
\begin{align} label{eq:reaction_diffusion}
u_t =& \nabla \cdot \alpha(u)\nabla u + f(u)\\
u(x,0) =& I(x)\notag \\
u(0,t)=& 0\notag \\
u(L,t)=& 0\notag
\end{align}
!et

Overview of the presentation
* Travelling wavefront
* Reaction term
* Diffusion term
* Solution of the biological equation


!split
======= Travelling wavefront =======
The idea is to study the size of the wave with constant speed $c$
!bt
\begin{equation} label{eq:wave_constant}
u(x,t) = u(x-ct) = u(z), z = x-ct
\end{equation}
!et

The numerical solutions can be compared with the analytical, to check the  effect from $\Delta t$. Here $\Delta t$ varies from 0.4 to 0.02.

MOVIE: [plots/reac_constant_wavefront_dt.webm, height=500,width=600]Analytical solution plotted with numerical solutions

The numerical solution has got the exact analytical solution as initial condition. The boundary has been updated each time step to the correct analytical solution. This is to prevent that the boundaries don't affect the error estimate.

|------c--------------c--------------c-------|
| dt           | error        | order        |
|------c--------------c--------------c-------|
| 0.4          | 0.967214     | 0.0          |
| 0.08         | 0.408244     | 0.53         |
| 0.02         | 0.131734     | 0.81	     |
|--------------------------------------------|

!split
======= Reaction term =======
The reaction term describes the change in concentration in a certain point. This variation is only affected
by the local chemical reaction.
!bt
\begin{equation} label{eq:rec_term}
u_t = f(u)
\end{equation}
!et
To see the properties of this equation, it can be discretized and solved numerically for
different values of $f(u)$.

!bt
\begin{align*}
u_t =& f(u)\\
\frac{u^n_i-u^{n-1}_i}{\Delta t}=& f(u^n_i)\\
u^n_i-\Delta t f(u^n_i) =& u^{n-1}_i
\end{align*}
!et
This gives a linear equation $Au = b$ that easy can be solved. Here the Fisher Kolmogoroff is used
!bt
\begin{equation}
f(u) = ru(1-\frac{u}{M})
\end{equation}
!et

===== Carrying capacity =====
Carrying capacity describes the maximum concentration for each point.

MOVIE: [../prosjekt_inf5631/paramovies/time.webm, height=500,width=600]

All simulations goes towards their carrying capacity and stabilizes here. The reproduction rate, $r$, has been set equal to one for all the simulations in order to isolate the effect of varying the carrying capacity. The time from initial conditions to final conditions is quite similar in all cases. 

===== Reproduction rate =====
The reproduction rate controls the speed of reproduction

MOVIE: [../prosjekt_inf5631/paramovies/time_r.webm, height=500,width=600]

This controls the speed towards carrying capacity. A larger reproduction rate will bring the solution faster
towards the steady state, which is controlled by $M$. The carrying capacity is sat to $M=0.8$.

!split
======= Diffusion term =======
!bt
\begin{equation}
	u_t = \nabla \cdot \alpha(u)\nabla u
\end{equation}
!et
The function $\alpha(u)$ has a major influence on the spatial term and affects the diffusion of the model. To solve this equation numerically, the equation needs to be discretized.
!bt
\begin{equation*}
	\left[D_t^-u=D_x(\alpha(u) D_x u)\right]
\end{equation*}
!et
This will result in a tridiagonal matrix A with the values
!bt
\begin{align} label{eq:matrix_spatial}
A_{i,i} =& 1+\frac{\Delta t}{\Delta x^2}(\alpha(u_{i+\frac{1}{2}})+\alpha(u_{i-\frac{1}{2}}))\notag\\
A_{i,i-1} =&-\frac{\Delta t}{\Delta x^2}(\alpha(u_{i-\frac{1}{2}}))\notag\\
A_{i,i+1} =&-\frac{\Delta t}{\Delta x^2}(\alpha(u_{i+\frac{1}{2}}))
\end{align}                               
!et
The boundary conditions are specified to be zero. Implementing these boundary conditions requires changes the following terms in the matrix, A.
!bt
\begin{align*}
A_{0,0} &= 1,\\
A_{0,1} &= 0,\\
A_{N_x,N_x-1} &= 0,\\
A_{N_x,N_x} &= 1
\end{align*}
!et
The b array with known values will be
!bt
\begin{align*}
b_0 &= 0,\\
b_i &= u^{n-1}_i,\quad i=1,\ldots,N_x-1,\\
b_{N_x} &= 0 
\end{align*}
!et

===== A linear solution =====
!bt
\begin{equation}
	\alpha(u) = k
\end{equation}
!et
Gives the following tridiagonal matrix
!bt
\begin{align*} label{eq:matrix_constant}
A_{i,i} =& 1+\frac{\Delta t}{\Delta x^2}(2k)=1+\frac{2k\Delta t}{\Delta x^2}\\
A_{i,i-1} =&-\frac{\Delta t}{\Delta x^2}(k)=-\frac{k \Delta t}{\Delta x^2}\\
A_{i,i+1} =&-\frac{\Delta t}{\Delta x^2}(k)=-\frac{k \Delta t}{\Delta x^2}\\
\end{align*}                               
!et
The simulation can be seem under

MOVIE: [../prosjekt_inf5631/paramovies/constant.webm, height=500,width=600]

===== Non linear solution =====
!bt
\begin{equation}
	\alpha(u) = u\\
\end{equation}
!et

This gives a nonlinear problem. $u$ can here be replaced by $u\_$.
!bt
\begin{align*} 
A_{i,i} =& 1+\frac{\Delta t}{2\Delta x^2}(u\__{i+1}+2u\__{i}+u\__{i-1})\\
A_{i,i-1} =&-\frac{\Delta t}{2\Delta x^2}(u\__{i}+u\__{i-1})\\
A_{i,i+1} =&-\frac{\Delta t}{2\Delta x^2}(u\__{i+1}+u\__{i})
\end{align*}                               
!et
The function will be produced with different error tolerance. First a simulation where only the previous value $u\_$ is used in matrix A. This is equivalent to a very large error tolerance. Then the error tolerance will be reduced in order to carry out a proper Picard Iteration.

MOVIE: [../prosjekt_inf5631/submovies/ordinary_sub.webm, height=500,width=600]ordinary with different tolerance for Picard Iteration

These results shows the behavior of $u\_$ when it varies from a large error tolerance,the previous time step, up to a error tolerance of $10^{-7}$. The simulation without any Picard Iteration gives a discontinuity in each direction. This becomes smaller the closer $u\_$ goes towards $u$. 

!split
======= Solution for the biological model =======
The combination of the reaction part and the spatial part gives the reaction-diffusion equation(ref{eq:reaction_diffusion}). This can be inserted in a matrix. This is done by using the two linear equations from the earlier sections. The Fisher Kolmogoroff can be inserted in the reaction term, $f(u)$.
!bt
\begin{align} label{eq:matrix_reaction_diffusion}
A_{i,i} =& 1+\Delta t(r(1-\frac{u^n_i}{m})+\frac{\alpha(u_{i+\frac{1}{2}})+\alpha(u_{i-\frac{1}{2}})}{\Delta x^2})\notag\\
A_{i,i-1} =&-\frac{\Delta t}{\Delta x^2}(\alpha(u_{i-\frac{1}{2}}))\notag\\
A_{i,i+1} =&-\frac{\Delta t}{\Delta x^2}(\alpha(u_{i+\frac{1}{2}}))
\end{align}                               
!et

===== Standard Fisher-Kolmogoroff equation =====
This simulation shows how the reaction term and the spatial diffusion term affects each other.The reaction term will go towards equilibrium state which is sat by the carrying capacity, $M$, as shown in the section above. The diffusion term will at the same time try to drag the function towards its equilibrium state. The reaction term is defined as a Fisher Kolmogoroff term, while the diffusion part consist of different constant values, $k$, in the $\alpha(u)$. This gives a Fisher Kolmogoroff equation 

MOVIE: [../prosjekt_inf5631/paramovies/reac_constant_2.webm, height=500,width=600]r=1,M=1

The setup for this simulation is a standard Fisher where $r=1$ and $M=1$, for the reaction term. While the constant $\alpha$ varies from 0.01 up to 10. This equation shows how the parts affects each other. When $\alpha=0.01$, it is not able to drag the diffusion towards zero. The reaction term is dominated. But when $\alpha=10$, the solution diffuses fast towards zero, and the diffusion term becomes dominated. The simulations under shows the influence of variations in the capacity and reproduction rate.

MOVIE: [../prosjekt_inf5631/paramovies/reac_constant_M.webm, height=500,width=600]r=1, $\alpha$=1

Here they tend towards their capacity, while $\alpha$ drags them down at the boundary.

MOVIE: [../prosjekt_inf5631/paramovies/reac_constant_r.webm, height=500,width=600]M=1, $\alpha$=1

When the reproduction rate is to weak, the solution will not reach the capacity state, which is sat to 1. When $r$ becomes stronger, the solution reaches the carrying capacity, $M$.


