TITLE: Geographic models 
AUTHOR: Torbjørn Seland
DATE: today

TOC: on

======= Introduction =======
This chapter will introduce a new model for epidemic diseases. By expand the ODE system from previous chapter to also consist a term for geographic spread of. The first section *Simple system for spatial spread* will build on the simple SIR model presented in previous chapter and be based on *Geographic spread and Control of epidemics* by Murray cite{murray2003mathematical}. The parameters from *English Boarding School* in previous chaper will be used for the model and the result will be compared between the models. The position of the infected student will be compared against the number of infected each day. The last section,*Zombiefication*, will study and expand the system from Langtangen, Mardal and Røtnes cite{zombie-math}. The results and parameter values used to calculate *Walking Dead* will be used to simulate the geographic result.
 

======= Simple system for spatial spread =======
A spatial variable, _x_ will now be introduced to the model. This result in both temporal and spatial variations. The difference from a standard ODE system will be the diffusion part added to each equation. The system can be seen in eq(ref{eq:simple_PDE}). 
!bt
\begin{equation} label{eq:simple_PDE}
	\begin{aligned}
	\frac{\partial S}{\partial t} &= -rIS + D\nabla ^2 S\\
	\frac{\partial I}{\partial t} &= rIS- aI + D\nabla ^2 I\\
	\frac{\partial R}{\partial t} &= aI + D\nabla ^2 R
	\end{aligned}
\end{equation}
!et
With the following conditions for the boundary and initial values
!bt
\begin{equation} label{eq:boundary_initial}
	\begin{aligned}
	u_x(0,t) &= u_x(X,t) = 0,\quad u = S,I,R\\
	u(x,0) &= f_u(x),\quad u= S,I,R
	\end{aligned}
\end{equation}
!et
This result in Neumann conditions at the boundary. The following implementation can be used at the boundary
!bt
\begin{equation}
	\begin{aligned}
	\frac{u_{-1}^n - u_1^n}{2\Delta x} &= 0
	u_{-1}^n &= u_1^n
	\end{aligned}
\end{equation}
!et
This is solved by adding an extra point on each side, called ghost points. The values in these points are updated each time step with values from $u_1^n$ and $u_{X-1}^n$ each round. All three classes, $S,I,R$ have the same diffusion coefficient, $D$, for this system. This give the three groups the same diffusion speed. This can vary between systems. Section *Zombiefication*, will contain various diffusion constants. The two parts $rIS$ and $aI$ will work in the same way as in the ODE system. Since this model taking the position into account, the idea is to model a group of infective that moves into a uniform population with susceptible, which is spread around with the density $S_0$. Then the geotemporal spread can be seen. The problem will first be consider as one-dimensional. The system can be nondimensionalise by writing 
!bt
\begin{equation} label{eq:constants_nondimensional}
	\begin{aligned}
	I^* =\frac{I}{S_0},&\quad I^* = \frac{I}{S_0},&\quad R^*= \frac{R}{S_0},&\\
	x^* =\left(\frac{rS_0}{D}\right)^{1/2}x,&\quad t^*=rS_0t,&\quad \lambda =\frac{a}{rS_0},&
	\end{aligned}
\end{equation}
!et
$S_0$ is used as a representative population. Now the model(ref{eq:simple_PDE}) can be expressed as in eq(ref{eq:simple_non_PDE}). The asterisks have been dropped to make it easier to read.
!bt
\begin{equation} label{eq:simple_non_PDE}
	\begin{aligned}
	\frac{\partial S}{\partial t} &= -IS + \frac{\partial^2 S}{\partial x^2},\\
	\frac{\partial I}{\partial t} &= IS- \lambda I + \frac{\partial^2 I}{\partial x^2},\\
	\frac{\partial R}{\partial t} &= \lambda I + \frac{\partial^2 R}{\partial x^2},
	\end{aligned}
\end{equation}
!et
The three parameters $r$, $a$ and $D$ have been replaced by $\lambda$. The *reproduction rate* that was presented for the ODE model can be seen as $1/\lambda $. This has a couple of equivalent meanings. $1/\lambda$ can be seen as the number of secondary infections produced by one primary infected. It can also be used to measure two different time scales. The first one, $1/(rS_0)$, measure the contagious time of the disease. The second one can look at the life expectancy for an infective. This can be described $1/a$. 
===== Travelling wave 1D =====
This section will focus on the travelling wave. The travelling wave describe how a group of infected, in this case, travels through a geographic area of humans. This will be shown by sending a pulse of infected into a group of susceptible. A travelling wave solution will be described as follows,
!bt
\begin{equation} label{eq:trav_para}
I(x,t)=I(z),\quad S(x,t)=S(z),\quad R(x,t) = R(z),\quad z = x-ct,
\end{equation}
!et
The value $c$ describe the wave speed. This represents a wave of constant shape that travels in the positive x-direction. (ref{eq:trav_para}) can be inserted into (ref{eq:simple_non_PDE}). This result in the ordinary system(ref{eq:ord_diff_sys})
!bt
\begin{equation} label{eq:ord_diff_sys}
	\begin{aligned}
	S'' + cS' - IS &= 0,\\
	I'' + cI' + I(S-\lambda)&=0\\
	R'' + cR  + I\lambda &=0
	\end{aligned}
\end{equation}
!et
This gives an eigenvalue problem. The value of $\lambda$ needs to stay in a range where $c > 0$ is fulfilled. The values $S$, $I$ and $R$ have to stay nonnegative. This leads to
!bt
\begin{equation} 
	\begin{aligned}
	0 \leq S(-\infty) < S(\infty)&=1\\
	I(-\infty)=I(\infty)&=0,\\
	1 \geq R(-\infty)\geq R(\infty) &= 0
	\end{aligned}
\end{equation}
!et

An epidemic wave can be seen in figure(ref{fig:1D_sub}). The value of $\lambda$ is sat to 0.5. The initial value for *Susceptible* is 1 for the area and the *Removed* to 0. The *Infected* class has a Gauss curve around 0 at initial time. In the four subplot, the epidemic wave travel towards the other side. The value $z$, which is defined in (ref{eq:trav_para}), is used to plot the travelling wave measured at a specific point, in this case 15. This travelling wave is shown in figure(ref{fig:1D_tw}).       

FIGURE:[plots/trav_wave_sub.png,height=600 width=800 frac=0.8] label{fig:1D_sub} The system (ref{eq:ord_diff_sys}. A gaussian curve with height 0.2 placed on the left side. This causes an epidemic wave controlled by the parameter $\lambda=0.5$. The size is measured at point $x=15$ and can be seen in figure (ref{fig:1D_tw}). 

FIGURE:[plots/epidemic_wave_z_lambda_0_5.png] label{fig:1D_tw} This shows the travelling wave measures at at $x=15$ in figure(ref{fig:1D_sub})

The system(ref{eq:ord_diff_sys}) is a fourth order phase space system. The lower bound for $c$ can be found. J.D Murray shows this in cite{murray2003mathematical}. The *Infective* class in system(ref{eq:ord_diff_sys}) can be linearised when $z\rightarrow \infty$. This leads to $S\rightarrow 1$ and $I \rightarrow 0$. The result then become 
!bt
\begin{equation}
	I'' + cI' + I(S-\lambda) \approx 0 
\end{equation}
!et
This can be found by
!bt
\begin{equation}
I(z) \varpropto \exp\left[(-c \pm {c^2 -4(1-\lambda)}^{1/2})z/2\right]
\end{equation}
!et
Since a concentration cannot be negative, it is required that $I(z)\rightarrow 0$. Therefore the solution has to avoid oscillation around 0. If a travelling wave exist, it has to satisfy
!bt
\begin{equation}
	c \geq 2(1-\lambda)^{1/2}, \lambda < 1
\end{equation}
!et
If $\lambda > 1$, no travelling wave will exist. Then the disease will die out. The terms defined in (ref{eq:constants_nondimensional}) will give the threshold conditions,
!bt
\begin{equation}
	\lambda = \frac{a}{rS_0} < 1
\end{equation}
!et
This is the same value that was given for the ODE model in the previous chapter.
===== Verifying the solution =====
To verify the implementation of the solution, a couple of tests can be done one the system. The system will be tested again a constant solution and a manufactured solution.   

=== Constant solution ===
A constant solution use preproduced constant values for for the concentrations $S$, $I$ and $R$. These can be replaced by $S = C_s,I=C_i,R=C_r$. The value of $C_i$ can only be 0 in system(ref{eq:simple_non_PDE}). This results in a poor test where several bugs can escape. The system can be expanded by adding a term $\beta R$ to the *Susceptible* class and subtract the same term from the *Removed* class. Then all three values can be tested. The system will then look: 
!bt
\begin{equation} label{eq:simple_non_PDE2}
	\begin{aligned}
	\frac{\partial S}{\partial t} &= -IS + \beta R + \frac{\partial^2 S}{\partial x^2},\\
	\frac{\partial I}{\partial t} &= IS- \lambda I + \frac{\partial^2 I}{\partial x^2},\\
	\frac{\partial R}{\partial t} &= \lambda I - \beta R + \frac{\partial^2 R}{\partial x^2},
	\end{aligned}
\end{equation}
!et
By deriving (ref{eq:simple_non_PDE2}), the following system (ref{eq:constant_PDE}) has to be solved
!bt
\begin{equation} label{eq:constant_PDE}
	\begin{aligned}
	C_iC_s &= \beta C_r \\
	C_iC_s &= \lambda C_i \\
	\lambda C_i &= -\beta C_r 
	\end{aligned}
\end{equation}
!et

The values $\beta$ and $\lambda$ are based on the constants. These can be chosen freely. Here they are sat to $C_s = 1.2,C_i=0.8,C_r=0.6$. This result in $\lambda= C_s = 1.2$ and $\beta= \frac{C_s C_i}{C_r}=1.6$. A test is made in python and can be seen in the code.

@@@CODE verify_sol.py fromto: def test_constant_solution@def test_manufactured_solution

The test was run with no error, and the three constant values were produced correctly. This test is not good enough by it self to qualify the program, but an error here would result in a large error in the program that had to be fixed before the next test. 
=== Manufactured solution ===
By constructing a function to each equation in the system (ref{eq:simple_non_PDE}), a manufactured solution can be created. Here $S$,$I$ and $R$ are pre produced. The system will be
!bt
\begin{equation} label{eq:simple_non_PDE2}
	\begin{aligned}
	\frac{\partial S}{\partial t} &= -IS + \frac{\partial^2 S}{\partial x^2}+f(x,t),\\
	\frac{\partial I}{\partial t} &= IS- \lambda I + \frac{\partial^2 I}{\partial x^2}+g(x,t),\\
	\frac{\partial R}{\partial t} &= \lambda I + \frac{\partial^2 R}{\partial x^2}+h(x,t),
	\end{aligned}
\end{equation}
!et
where $f$,$g$ and $h$ are functions to achieve the expected results for $S$, $I$ and $R$. In this case the functions will be:
!bt
\begin{equation}
	\begin{aligned}
	f(x,t) = \frac{\partial S}{\partial t} + IS - \frac{\partial^2 S}{\partial x^2}\\
	g(x,t) = \frac{\partial I}{\partial t} - IS + \lambda I - \frac{\partial^2 I}{\partial x^2}\\
	h(x,t) = \frac{\partial R}{\partial t} -\lambda I - \frac{\partial^2 R}{\partial x^2},
	\end{aligned}
\end{equation}
!et
When choosing the expected function for the classes, it is important that the boundary conditions from (ref{eq:boundary_initial}) is fulfilled.
!bt
\begin{equation}
    u_x(0,t) = u_x(X,t) = 0
\end{equation}
!et
The quantities have been sat to:
!bt
\begin{equation}
	\begin{aligned}
    S(x,t) = cos(\frac{\pi}{X}x)t\\
    I(x,t) = cos(\frac{\pi}{X}x)t\\
    R(x,t) = cos(\frac{\pi}{X}x)t
	\end{aligned}
\end{equation}
!et
Now `sympy` can be used to do the calculations for the three functions $f$, $g$ and $h$. The program can be seen in the Appendix. This result in the following equations seen in (ref{eq:manu_func}) 

Which give
!bt
\begin{equation} label{eq:manu_func}
	\begin{aligned}
	f(x,t) &= (t^2\cos(\pi x) + \pi^2t + 1)\cos(\pi x)\\
	g(x,t) &= (\lambda t - t^2\cos(\pi x) + \pi^2t + 1)\cos(\pi x)\\
	h(x,t) &= (-\lambda t + \pi^2t + 1)\cos(\pi x)
	\end{aligned}
\end{equation}
!et
A similar test made for the constant solution can be used here. While the constant test expected a difference on machine precition, this is not the case here. In this test, an expected convergence rate can be measured.

The following manufactured test will then be
@@@CODE verify_sol.py fromto: def test_manufactured_solution@def solver()

=== Convergence rate ===
The program can be controlled by checking the convergence rate. The error term  for this equation can be described as  
!bt
\begin{equation} label{eq:error}
    \epsilon = C_x\Delta x^2 + C_t \Delta t
\end{equation}
!et
With equation(ref{eq:error}), the expected convergence rate can be found for both $\Delta x$ and $\Delta t$. To be able to separate the $\Delta$'s, the other value has to be close to eliminated. To study the value $\Delta x$,  $\Delta t \ll \Delta x$ has to be fullfilled. This will lead to $C_t\Delta t \approx 0$, and the error term for $\Delta x$ can be found. The opposite thing can  be done for $\Delta t$. A table for the error is produced for different values for $\Delta t = 0.05$ and $\Delta x=0.1$.

label{table:error_numbers}
|---------------------------------------------------------------------------------------------------------------|
|         		|$\Delta x$ 	|$\frac{\Delta x}{2}$   |$\frac{\Delta x}{4}$  |$\frac{\Delta x}{8}$	|
|---------------------------------------------------------------------------------------------------------------|
|$\Delta t     $ 	|9.8E-3   	|  -    		|		     - | -     		 	|
|$\frac{\Delta t}{4} $  |9.9E-3   	|2.5E-3 		|		     - | -     		 	|
|$\frac{\Delta t}{8} $  |9.9E-3   	|2.5E-3 		|		6.1E-4 | -     		 	|
|$\frac{\Delta t}{16}$  |9.9E-3   	|2.5E-3 		|		6.1E-4 |1.5E-4 		 	|
|---------------------------------------------------------------------------------------------------------------|
#0.00986586295419,-,-,- 
#0.00988006143376,0.00246039081619,-,-
#0.00988361769746,0.00246127510994,0.000614719954035
#0.00988450717896,0.00246149628689,0.000614775174047,0.000153656409034

=== The spatial error ===
The (ref{table:error_numbers}) gives information about the error when $\Delta t$ and $\Delta x$ are reduced. By studying the row where $\Delta t/16$, the $C_t \Delta t$ can be seen as close to negligible in equation(ref{eq:error}). The error can then be expressed 
!bt
\begin{equation}
    \epsilon \propto \Delta x^r
\end{equation}
!et
The value is expected to be $r=2$, since Crank Nicolson is used in the spatial discretization. This gives a 2.order error. By comparing the error for different $\Delta x$, the convergence rate, $r$, can be expressed, 
!bt
\begin{equation} label{eq:conv_rate}
 r_{12} \simeq \frac{\log(\epsilon_1/\epsilon_2)}{\log(\Delta x_1/\Delta x_2)}
\end{equation}
!et
Since the table above has four different error values, these can be used to give three different convergence rates. $\Delta x_1 = \Delta x, \Delta x_2 = \Delta x/2...$. The same labeling will be done for the different error values, $\epsilon$.
|-------------------------------------------------------------------------------|
|	|$\epsilon_1/\epsilon_2$|$\epsilon_2/\epsilon_3$|$\epsilon_3/\epsilon_4$|
|-------------------------------------------------------------------------------|
| r    |2.0056			|2.0014			|2.0004			|
|-------------------------------------------------------------------------------|

##|------|$\epsilon_1/\epsilon_2$	|$\epsilon_2/\epsilon_3$|$\epsilon_3/\epsilon_4$|
Here the rate goes towards 2, and a 2.order convergence rate seems to be fulfilled.
=== The temporal error ===
The temporal error is hard to find since the *Stability criteria* expect $\Delta t$ to fulfill the criteria in (ref{eq:stability_cr}) to avoid oscillations.
!bt
\begin{equation} label{eq:stability_cr}
 2\Delta t \leq \Delta x^2
\end{equation}
!et
This results in the case that $\Delta x \ll \Delta t$ is impossible, because this only leads to an unstable solution. By looking at the column for $\frac{\Delta x}{8}$, the only stable solution is for $\frac{\Delta t}{16}$. Therefore the technique used for the spatial error cannot be used here. By studying the diagonal numbers in the table, the expected convergence rate is fulfilled for both $\Delta x$, which gives $r = 2$ and for $\Delta t$ that gives $r=1$   

===== Travelling wave in 2D =====
The system (ref{eq:simple_non_PDE}) can be discretized for a 2D area. This is more realistic when simulating a geographic spread of an epidemic disease. The non dimensional system  can be discretized with Forward Euler in time and Crank Nicolson in space
!bt
\begin{equation} label{eq:SIR_disc}
	\begin{aligned}
    \frac{S^{n+1}_{i,j}-S^n_{i,j}}{\Delta t} &= -I^{n}_{i,j}S^{n}_{i,j} + \left(\frac{S^{n}_{i-1,j}-2S^{n}_{i,j}+S^{n}_{i+1,j}}{\Delta x^2}+\frac{S^{n}_{i,j-1}-2S^{n}_{i,j}+S^{n}_{i,j+1}}{\Delta y^2}\right) \\
    \frac{I^{n+1}_{i,j}-I^n_{i,j}}{\Delta t} &= I^{n}_{i,j}S^{n}_{i,j} -\lambda I^{n}_{i,j} + \left(\frac{I^{n}_{i-1,j}-2I^{n}_{i,j}+I^{n}_{i+1,j}}{\Delta x^2}+\frac{I^{n}_{i,j-1}-2I^{n}_{i,j}+I^{n}_{i,j+1}}{\Delta y^2}\right) \\
    \frac{R^{n+1}_{i,j}-R^n_{i,j}}{\Delta t} &= \lambda I^{n}_{i,j}+\left(\frac{R^{n}_{i-1,j}-2R^{n}_{i,j}+R^{n}_{i+1,j}}{\Delta x^2}+\frac{R^{n}_{i,j-1}-2R^{n}_{i,j}+R^{n}_{i,j+1}}{\Delta y^2}\right) 
	\end{aligned}
\end{equation}
!et
The known values can be placed on the right side. The system will then be
!bt
\begin{equation}
	\begin{aligned}
    S^{n+1}_{i,j} &= S^{n}_{i,j}+\Delta t\left(-I^{n}_{i,j}S^{n}_{i,j} + \left(\frac{S^{n}_{i-1,j}-2S^{n}_{i,j}+S^{n}_{i+1,j}}{\Delta x^2}+\frac{S^{n}_{i,j-1}-2S^{n}_{i,j}+S^{n}_{i,j+1}}{\Delta y^2}\right)\right) \\
    I^{n+1}_{i,j} &= I^{n}_{i,j}+\Delta t\left(I^{n}_{i,j}S^{n}_{i,j} -\lambda I^{n}_{i,j} + \left(\frac{I^{n}_{i-1,j}-2I^{n}_{i,j}+I^{n}_{i+1,j}}{\Delta x^2}+\frac{I^{n}_{i,j-1}-2I^{n}_{i,j}+I^{n}_{i,j+1}}{\Delta y^2}\right)\right) \\
    R^{n+1}_{i,j} &= R^{n}_{i,j}+\Delta t\left(\lambda I^{n}_{i,j}+\left(\frac{R^{n}_{i-1,j}-2R^{n}_{i,j}+R^{n}_{i+1,j}}{\Delta x^2}+\frac{R^{n}_{i,j-1}-2R^{n}_{i,j}+R^{n}_{i,j+1}}{\Delta y^2}\right)\right) 
	\end{aligned}
\end{equation}
!et
This results in an explicit system, which is easy to code. It consist of known values on the right side and only one unknown on the left side.
=== A gaussian wave ===
In the PDE system for the 1D equation, a Gaussian quantity of infected humans was placed on the left side in the initial value. This resulted in a wave of infected spread along the x-axis. A similar thing can be done for the 2D simulation. A couple of similar simulations have been produced for the 2D system. The first simulation is calculated with a Gaussian function along $x=0$ for the *Infected* at initial time. The second simulation has placed the Gaussian function at point $x=0,y=0$ for the *Infected* group at initial value. Both simulations can be seen in the Appendix.  
<linebreak>
<linebreak>
By studying the travelling wave at a certain point, the size of the epidemic wave can be measured and compared. In these two 2D simulations in figure(ref{fig:2D_trav_wave}), the wave will be measured in the point (15,15) while the travelling wave in the 1D simulation was measured at point(15). The two travelling waves can be seen in the figure(ref{fig:2D_trav_wave}).

FIGURE:[plots/Trav_wave_2D.png, height=400 width=800 frac=0.8] label{fig:2D_trav_wave} Travelling wave measured at point (15,15) with two different initial values for the Infected class. The initial value is sat as a Gaussian line along (0,y) in the left plot and as a Gaussian point (0,0) in the right plot

The shape of the two travelling waves in figure(ref{fig:2D_trav_wave}) are similar. The only difference is the time when the wave occur. The plot for 1D wave in fig(ref{fig:1D_tw}) has the same shape. With a closer study, the area under the function can be measured for all three cases. The result can be seen in the (ref{table:wave_values})   

#1D
#1.4340793845
#1.43143259034 dt = $1\cdot10^{-3}$, dx = 0.05
#1.43195870243 dt = 0.0002, dx^2 = 0.000625
#2D wave line: 
#1.43345609926 dt =0.0004, dx^2 =  0.0016
#2D wave point:
#1.43352971688

label{table:wave_values}
|------------------------------------------|
|1D wave       |2D wave line |2D wave point|
|------------------------------------------|
|1.43          |1.43         |1.43         |
|------------------------------------------|

The area in all three simulations moves towards the same area when $\Delta t$ and $\Delta x$ are reduced. The size and shape will not change by  expanding the system from 1D to 2D. But by studying the figure(ref{fig:2D_trav_wave}), the wave occur at different times. This is caused by the distance from the start position for the Gaussian wave. The first subplot that starts with a Gaussian function along the $x=0$ axis gets a wave of infected wash along the x axis. This can be seen as a wave on the beach. Everyone that have the same distance from the ocean will be hit simultaneously. The travelling wave for the 1D simulation and the first subplot occur at the same time, because they are measured at the same distance from the starting point. The last plot is also measured at (15,15), but occur later. Since the wave starts at point (0,0), the distance to (15,15) is 21.21. This means that the wave will reach the point 6.21 time steps later. This is also reasonable by looking at the plot.    

=== Change in initial flow ===
By increasing the initial wave of *Infected*, the start value of *Infected* can be study. The simulation is run with the same parameters as for the three simulations above and the only difference is the initial value for the infected group. The Gaussian wave of infected are placed a point (0,0) as for right subplot in figure(ref{fig:2D_trav_wave}).The simulation can be seen in figure(ref{fig:initial_value}).  
#Volume ordinary = 0.3141592653589793
#Volume extreme = 157.07963267948966
#Volume under graph 1.43345609926

FIGURE:[plots/2D_initial_variable_sub.png,height=600 width=800 frac=0.8] label{fig:initial_value} A major flow of infected spread outwards the field. After a certain time, the wave has past the area and the number in each class stabilize. 

By measuring the travelling wave at point(15,15), the size and shape can be compared with the second subplot in figure(ref{fig:2D_trav_wave}). The travelling wave for this simulation can be seen in figure(ref{fig:initial_trav_wave}) and the area for the travelling wave is measured to 1.43, which is similar with the three other simulations.

FIGURE:[plots/TW_2D_initial_z_lambda_0_5.png,height=600 width=800 frac=0.8] label{fig:initial_trav_wave} The travelling wave with a major increase of infected at the initial time. 

By increasing the initial value for the *Infected* group, the size of the travelling will not be affected. But there is a difference in the time when the wave occur. In the simulation where the initial value is higher, the travelling wave reaches the measuring point (15,15) earlier. This can be explained by the idea of a ball dropped from a large height. If the ball is released or thrown to the ground, will only affect the acceleration of the ball, not the terminal velocity. After a certain time the released ball and the thrown ball will reach the same maximum speed. This is also the case for the speed of the travelling wave. 
=== Change in lambda ===
The one thing that affects the speed and size, is the $\lambda$ variable in the PDE system(ref{eq:simple_non_PDE}). This $\lambda$ is a combination of $a$, which controls deaths among infected, $r$, which control the number of infected in a meeting between an infected and a susceptible. The last parameter in $\lambda$ is the concentration of Susceptible. By changing this parameter, the travelling wave will change in both size and shape. In figure(ref{fig:change_lambda}), the simulation is run with four different values of $\lambda$.

FIGURE:[plots/2D_lambda_variable.png, height=600 width=800] label{fig:change_lambda} The travelling wave simulated with $\lambda$ values in the range of 0.01 to 1.

To understand the result in figure(ref{fig:change_lambda}), the $\lambda $ function can be study,
!bt
\begin{equation} label{eq:lambda}
 \lambda =\frac{a}{rS_0},
\end{equation}
!et
A major and aggressive travelling wave is caused by $\lambda \rightarrow 0$. In figure(ref{fig:change_lambda}), $\lambda$ is run with the value 0.01 in the first subplot. This results in a travelling wave of infected that eradicates the *Susceptible* group in a short time. The wave starts to decreasing when all *Susceptible* are infected. By looking at the equation(ref{eq:lambda}), a small value is caused by a small $a$ compared to $r$ and $S_0$. If $a$ is low, this result in few deaths/immune in the infected class. This means that this class will grow and be able to infect even more from the *Susceptible* class. The same thing will happen if $r$ is large. A result of this will cause an aggressive disease that infects  a major part of the population. The same result will happen if $S_0$ is large. Then there are several possible humans to infect. Therefore a outburst of a disease is more critically in a city than in the wilderness, far from other humans.
<linebreak>
<linebreak>
If $\lambda$ increases above 1, the disease will not be able to spread. The number of infected will decrease, since the number of dead/immune caused by the *Infected* group is higher than the amount of *Infected* humans from the *Susceptible* group. After a certain time, the number of infected will die out. If $\lambda$ stays at 1, the number of infected will be equal the whole time. 

======= Epidemic in an English Boarding School 1978 =======
An example from an English boarding school was presented in the previous chapter . This example was based on the book from J.D Murray cite{murray2002mathematical}, and was modeled for a ODE system. A similar result should appear for the PDE system with same parameter values and a uniform distribution of the groups. The school had 763 students where one of the students brought a disease back to the school. The following number was used for the ODE system in chapter one. $N=763, S_0=762,I_0=1,R_0=0,\rho=202$ and $r = 2.18\cdot 10^{-3}$. 
<linebreak>
<linebreak>
The first simulation is produced with uniform distributed concentration, this is done to verify the implementation. A person is defined as one cubic. The total volume of the whole group is spread over the area. The area is sat to be 100 m x 100 m, which result in an average height of $1/10000$ m per person. This is to get an uniformed distribution. This would of course be more difficult in the real life, particular if the person should be alive. Since the *Infected* group only consist of one person, the total height will be 0.0001 for the whole area. The *Susceptible* group consist of 762 students and the total height in each point will be 0.0762 The simulation can be seen in the Appendix. 
<linebreak>
<linebreak>
The results from the first subplot in figure(ref{fig:british_number}) are equal with the result from the ODE system modeled in the previous chapter.This can be seen in (ref{table:british_number_table}). This is as expected since the diffusion term is negligible in this system and simulation is a group of separate ODE systems modeled at each point over an area.

FIGURE:[plots/british_number.png, height=1000 width=400 frac=0.8] label{fig:british_number} English Boarding School modeled with three different initial values for the infected student. The amount of students in each group modeled over 15 days. Subplot 1: uniform distribution. Subplot 2: The student is placed as a Gaussian function in center. Subplot 3: The student is placed as a Gaussian function in the corner (0,0). 

label{table:british_number_table}
|-------------------------------------------------------------------|
|           | ODE system| PDE uniform dist  |PDE center |PDE corner |
|-------------------------------------------------------------------|
|5 Days     |-----------|-------------------|-----------|-----------|
|-------------------------------------------------------------------|
|Susceptible|444.62     |444.62             |748.03     |757.33     |
|Infective  |209.56     |209.56             |7.36       |2.35       |
|Removed    |108.82     |108.82             |7.60      	|3.32       |
|-------------------------------------------------------------------|
|10 Days    |-----------|-------------------|-----------|-----------|
|-------------------------------------------------------------------|
|Susceptible|37.59      |37.59              |697.71     |743.58     |
|Infective  |117.59     |117.59             |24.43      |6.66       |
|Removed    |607.82     |607.82             |40.86     	|12.76      |
|-------------------------------------------------------------------|
|15 Days    |-----------|-------------------|-----------|-----------|
|-------------------------------------------------------------------|
|Susceptible|21.09      |21.09              |597.01     |717.02     |
|Infective  |17.30      |17.30              |46.96      |12.37      |
|Removed    |724.62     |724.62             |119.03     |33.61      |
|-------------------------------------------------------------------|
#dt = 1.5E-4
#dx = 0.04
#dx^2 = 1.6E-3
#ODE = 1.5E-4

=== Introducing a Gaussian distribution of infective ===
An assumption to make is that a person is not able to be evenly distributed over an area. In this example with only one infected student at initial time, the chance of being infected increase as closer you get to the infected student. The student in placed as a Gaussian function in the middle of the school yard, to see if this affect the result. The height is sat to 1 and the volume of the Gauss function is sat to 1 cubic. The simulation can be seen in figure(ref{fig:gauss_sub}) and the total total amount of students can be be seen in figure(ref{fig:british_number}).

FIGURE:[plots/2D_british_school_gauss_sub.png, height=600 width=800 frac=0.8] label{fig:gauss_sub} The student is placed in the center of the school yard as a Gaussian finction with height= 1 m and volume = 1 m^3. 	

<linebreak>
<linebreak>
The results from the uniform distributed and Gaussian distributed simulations shows variously results. The difference between the simulations is the placement of the infective. This change has a major impact. Since the only one that can be infected with the Gaussian distribution are the students close to the infective, it restrict the spread of the epidemic. While the chance of getting infected in this area is higher. The figure(ref{fig:gauss_sub}) shows that the amount of infective quickly grow in the center, where the infected was placed. The last subplot also show that the amount of removed in the center are closed to the maximum of the initial value of Susceptible. While the students along the boundary of the school yard seems to be unaffected after 15 days. This simulation shows that the placement of the infective has a major role in the simulation.
<linebreak>
<linebreak>
The placement of the infective, here as a Gaussian function, also affects the outcome. The last subplot in Fi.(ref{fig:british_number}) describes a simulation where the Gaussian function is placed in the corner(0,0). The total volume of the function is increased to 4 since only a quarter of the function is placed in the area. The table (ref{table:british_number_table}) shows that the total number of infected is lower than for the centered placed Gaussian. The infected student is only able to spread the disease to a quarter of the population compared to the infected one in the center. The simulation can be seen in the Appendix.
<linebreak>
<linebreak>
If the simulations are run for a longer time, the difference between each class will decrease. After 100 days there will be about 18 susceptible students left in the uniform distributed group, compared to 25 students in both of the Gaussian groups. The simulations can be seen in the Appendix.

!split
======= Zombiefication =======
The previous chapter studied a ODE system which was used to calculate the results of the TV series *Walking Dead*. This model was based on the system from LMR and was developed with an extra term in the  phase *counter attack*. The following system that was used in chapter *Epidemic models* can be expand with a diffusion term in each class. The PDE system can be seen in eq(ref{eq:seland_model})  

!bt
\begin{align*} label{eq:seland_model}
\frac{\partial S}{\partial t} =& \Sigma -(\beta+\mu \omega(t))SZ - \delta_SS +D_s\nabla^2 S \\
\frac{\partial I}{\partial t} =& (\beta+\mu \omega(t))SZ - \varrho I - D_i\delta_II+\nabla^2 I\\
\frac{\partial Z}{\partial t} =& \varrho I- (\alpha+\omega(t))SZ + \zeta R+D_z\nabla^2 Z\\
\frac{\partial R}{\partial t} =& \delta_SS +\delta_II -\zeta R + (\alpha+\omega(t))SZ+D_r\nabla^2 R 
\end{align*}
!et
By discretize this with Forward Euler in time and Crank Nicolson in space as for the SIR model(ref{eq:SIR_disc}), the system can be expressed
!bt
\begin{equation} label{eq:SIZR_disc}
	\begin{aligned}
    \frac{S^{n+1}_{i,j}-S^n_{i,j}}{\Delta t} &= \Sigma - (\beta+\mu \omega(t))S^{n}_{i,j}Z^{n}_{i,j}- \delta_S S^{n}_{i,j}+\
        D_s\left(\frac{S^{n}_{i-1,j}-2S^{n}_{i,j}+S^{n}_{i+1,j}}{\Delta x^2}+\frac{S^{n}_{i,j-1}-2S^{n}_{i,j}+S^{n}_{i,j+1}}{\Delta y^2}\right) \\
    \frac{I^{n+1}_{i,j}-I^n_{i,j}}{\Delta t} &= (\beta+\mu \omega(t))S^{n}_{i,j}Z^{n}_{i,j}-\varrho I^{n}_{i,j}- \delta_I I^{n}_{i,j}+\
        D_i\left(\frac{I^{n}_{i-1,j}-2I^{n}_{i,j}+I^{n}_{i+1,j}}{\Delta x^2}+\frac{I^{n}_{i,j-1}-2I^{n}_{i,j}+I^{n}_{i,j+1}}{\Delta y^2}\right) \\
    \frac{Z^{n+1}_{i,j}-Z^n_{i,j}}{\Delta t} &= \varrho I^{n}_{i,j}-(\alpha+\omega(t))S^{n}_{i,j}Z^{n}_{i,j}+ \zeta R^{n}_{i,j}+\
        D_z\left(\frac{Z^{n}_{i-1,j}-2Z^{n}_{i,j}+Z^{n}_{i+1,j}}{\Delta x^2}+\frac{Z^{n}_{i,j-1}-2Z^{n}_{i,j}+Z^{n}_{i,j+1}}{\Delta y^2}\right) \\
    \frac{R^{n+1}_{i,j}-R^n_{i,j}}{\Delta t} &= \delta_S S^{n}_{i,j}+\delta_I I^{n}_{i,j}-\zeta R^{n}_{i,j}+(\alpha+\omega(t))S^{n}_{i,j}Z^{n}_{i,j}
        D_r\left(\frac{R^{n}_{i-1,j}-2R^{n}_{i,j}+R^{n}_{i+1,j}}{\Delta x^2}+\frac{R^{n}_{i,j-1}-2R^{n}_{i,j}+R^{n}_{i,j+1}}{\Delta y^2}\right) 
	\end{aligned}
\end{equation}
!et
By setting the unknown on the left side and the known on the right, the following system can be computed
!bt
\begin{equation} label{eq:SIZR_disc2}
	\begin{aligned}
    S^{n+1}_{i,j} &= S^n_{i,j} + \Delta t \left( \Sigma - (\beta+\mu \omega(t))S^{n}_{i,j}Z^{n}_{i,j}- \delta_S S^{n}_{i,j}+\
        D_s\left(\frac{S^{n}_{i-1,j}-2S^{n}_{i,j}+S^{n}_{i+1,j}}{\Delta x^2}+\frac{S^{n}_{i,j-1}-2S^{n}_{i,j}+S^{n}_{i,j+1}}{\Delta y^2}\right)\right) \\
    I^{n+1}_{i,j} &= I^n_{i,j} + \Delta t \left((\beta+\mu \omega(t))S^{n}_{i,j}Z^{n}_{i,j}-\varrho I^{n}_{i,j}- \delta_I I^{n}_{i,j}+\
        D_i\left(\frac{I^{n}_{i-1,j}-2I^{n}_{i,j}+I^{n}_{i+1,j}}{\Delta x^2}+\frac{I^{n}_{i,j-1}-2I^{n}_{i,j}+I^{n}_{i,j+1}}{\Delta y^2}\right)\right) \\
    Z^{n+1}_{i,j} &= Z^n_{i,j} +\Delta t \left( \varrho I^{n}_{i,j}-(\alpha+\omega(t))S^{n}_{i,j}Z^{n}_{i,j}+ \zeta R^{n}_{i,j}+\
        D_z\left(\frac{Z^{n}_{i-1,j}-2Z^{n}_{i,j}+Z^{n}_{i+1,j}}{\Delta x^2}+\frac{Z^{n}_{i,j-1}-2Z^{n}_{i,j}+Z^{n}_{i,j+1}}{\Delta y^2}\right)\right) \\
    R^{n+1}_{i,j} &= R^n_{i,j} +\Delta t \left(\delta_S S^{n}_{i,j}+\delta_I I^{n}_{i,j}-\zeta R^{n}_{i,j}+(\alpha+\omega(t))S^{n}_{i,j}Z^{n}_{i,j}
        D_r\left(\frac{R^{n}_{i-1,j}-2R^{n}_{i,j}+R^{n}_{i+1,j}}{\Delta x^2}+\frac{R^{n}_{i,j-1}-2R^{n}_{i,j}+R^{n}_{i,j+1}}{\Delta y^2}\right)\right) 
	\end{aligned}
\end{equation}
!et
To verify that the discretization has been done correct, a simulation with uniform distributed classes can be done. The result is the expected to be similar as for the ODE system in the previous chapter. A zombie attack can be separate into three different phases, explained in detail in the previous chapter. The first phase is short and is called the *initial phase*. This is a condition where the humans are unfamiliar with the disease and behave quite naive to the disease. This result in a high chance of getting infected. The next phase is called *Hysterical phase*. The humans are now more familiar with the situation and tries to avoid the infected ones. This result in a lower chance of getting infected. The last phase, which happens at the same time as the hysterical phase, is the counter attack. This phase is often started if the humans are attacked by zombies. The following parameter that was used for simulating the first episodes in *Walking Dead* will also be used here. These can be seen in (ref{table:param_val}). By compute the system for all three phases, the value in each phase can be compared with the ones from the ODE system in the previous chapter. This will give an indication if the discretization is done correct. 

label{table:param_val}
|-------------------------------------------------------|
|parameter|Initial phase|hysterical phase|counter attack|
|-------------------------------------------------------|
|$\beta$  |0.01155      | 0.000011       | 0.00011      |
|$\varrho$|1.37         | 1.5            | 1.5          |
|$\alpha$ |0.00044      | 0.000208       | 0.000208     |
|a        |0            | 0              | 0.0073       |
|$\sigma$ |0            | 0              | 0.005        |
|$\mu$    |0            | 0              | 0.14         |
|-------------------------------------------------------|

The simulation in figure(ref{fig:zombie_three_number}) seems to match the result from the ODE system. A closer check can be done by comparing the groups in each phase. This result can be seen in (ref{table:compare_phases_zombie}) 

FIGURE:[plots/2D_zombie_three_phases_number.png, height=600 width=800 frac=0.8] label{fig:zombie_three_number} Same results as for the ODE system in the previous chapter

label{table:compare_phases_zombie}
|-----------------------------------------------------------------------|
|                   | ODE system| PDE uniform dist  | PDE gauss center  |
|-----------------------------------------------------------------------|
|Initial phase      |-----------|-------------------|-------------------|
|-----------------------------------------------------------------------|
|Susceptible        |71.3       | 71.5              |81.12             |
|Infected           |230.8      | 230.6             |210.94            |
|Zombie             |298.9      | 298.9             |310.11            |
|Removed            |21.0       | 21.0              |<:20.60             |
|-----------------------------------------------------------------------|
|Hysterical phase   |-----------|-------------------|-------------------|
|-----------------------------------------------------------------------|
|Susceptible        |61.6       |61.8               |70.55              |
|Infected           |0.3        |0.3                |0.34               |
|Zombie             |358.6      |357.9              |334.33             |
|Removed            |201.5      |202.0              |217.56             |
|-----------------------------------------------------------------------|
|Counter attack     |-----------|-------------------|-------------------|
|-----------------------------------------------------------------------|
|Susceptible        |57.8       |58.2               |66.50              |
|Infected           |1.2        |1.2                |1.23               |
|Zombie             |331.8      |331.1              |305.86             |
|Removed            |231.3      |231.7              |249.19             |
|-----------------------------------------------------------------------|

These results shows that the PDE system gives the same result as for the ODE. The error can be controlled by decreasing the $\Delta t$ and $Delta x$ for the system. 

##ODE results
##
##---------------------
##time, 0.000000
##S_n 621.0
##I_n 0.0
##Z_n 1.0
##R_n 0.0
##---------------------
##time, 3.000000
##S_n 71.2973582098
##I_n 230.848367121
##Z_n 298.873127347
##R_n 20.9812508213
##---------------------
##time, 33.000000
##S_n 61.6100739089
##I_n 0.310909545827
##Z_n 358.579528667
##R_n 201.500626378
##---------------------
##time, 34.000000
##S_n 57.7976621629
##I_n 1.1578809554
##Z_n 331.784821898
##R_n 231.260807984
##
##
##PDE results
##
##---------------------
##time=0.000000
##Susceptible = 621.00
##Infective = 0.00
##Zombies = 1.00
##Removed = 0.00
##---------------------
##time=3.000000
##Susceptible = 71.54
##  Infective = 230.57
##    Zombies = 298.91
##    Removed = 20.97
##---------------------
##time=33.000000
##Susceptible = 61.83
##Infective =   0.32
##Zombies =     357.89
##Removed =     201.96
##---------------------
##time=34.000000
##Susceptible = 58.02
##Infective =   1.16
##Zombies =     331.08
##Removed =     231.74
##Values each phase with dt= $5 \cdot 10^{-4}$ 
##---------------------
##time=0.000000
##Susceptible = 621.00
##Infective = 0.00
##Zombies = 1.77
##Removed = 0.00
##---------------------
##time=3.000000
##Susceptible = 81.12
##Infective =   210.94
##Zombies =     310.11
##Removed =     20.60
##---------------------
##time=33.000000
##Susceptible = 70.55
##Infective =   0.34
##Zombies =     334.33
##Removed =     217.56
##---------------------
##time=34.000000
##Susceptible = 66.50
##Infective =   1.23
##Zombies =     305.86
##Removed =     249.19



=== Variation in diffusion ===
##plots/2D_zombie_three_phases_initial_spread.webm, 
##MOVIE:[plots/2D_zombie_three_phases_initial_spread.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
##
##FIGURE:[plots/2D_zombie_three_phases_initial_spread_sub.png, height=600 width=800 frac=0.8]
##
##FIGURE:[plots/2D_zombie_three_phases_initial_spread_number.png, height=600 width=800 frac=0.8]
##
##plots/2D_zombie_three_phases_initial_spread_2"
##
##MOVIE:[plots/2D_zombie_three_phases_initial_spread_2.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
##
##FIGURE:[plots/2D_zombie_three_phases_initial_spread_2_sub.png, height=600 width=800 frac=0.8]
##
##FIGURE:[plots/2D_zombie_three_phases_initial_spread_2_number.png, height=600 width=800 frac=0.8]
##
##moviename = "plots/2D_zombie_three_phases_spatial_control"
##
##MOVIE:[plots/2D_zombie_three_phases_spatial_control.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
##
##FIGURE:[plots/2D_zombie_three_phases_spatial_control_sub.png, height=600 width=800 frac=0.8]
##
##FIGURE:[plots/2D_zombie_three_phases_spatial_control_number.png, height=600 width=800 frac=0.8]
##
##moviename = "plots/2D_zombie_three_phases_spatial_control_3_init"
##
##MOVIE:[plots/2D_zombie_three_phases_spatial_control_3_init.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
##
##FIGURE:[plots/2D_zombie_three_phases_spatial_control_3_init_sub.png, height=600 width=800 frac=0.8]
##
##FIGURE:[plots/2D_zombie_three_phases_spatial_control_3_init_number.png, height=600 width=800 frac=0.8]

=== Where does the infected one arises ===
In the previous section *English boarding school*, the placement of the infected was proven to have a major influence on the result. But here the *Susceptible* was uniformed distributed over the schoolyard. Based on the data from *Walking Dead*, the amount in each class was based on three different places where Rick went by. Based on the TV series, it is hard to decide the geograpic distance between these three places. Therefore they have been placed with a certain distance from each other. The following simulation is done on a grid with size(20 x 20) with the following placement on the towns. Small(4,4) with size 21, middle(9,15) with size 200 and large(15,5) with size 400. Since these values was based on the humans and zombies seen in the series, these can be scaled up. The total population can be scaled up with 1000, so the large town can be seen as an area with a population of 400 000. The length can be measured in kilometre. Then the distance between the middle and large town will be 11.66 km. Compared to the distance between Oslo and Bærum(Sandvika) which is 15 km, the simulation can be seen as rough estimate of the area around Oslo.
<linebreak>
<linebreak>
The diffusion term describe the diffusion for each class. This can be seen as the speed of each group. If the diffusion constant is large, the flow towards equilibrium will go faster. The values have been sat as follows. 
* $D_s=1$, The *Susceptible* has a basic moving speed. The other classes are based on the speed of a healthy human.
* $D_i=0.5$, The *Infected* are often injured caused by lately fights. This affect their moving speed
* $D_z=0.9$, The average moving speed for a zombie. There are zombies with the moving speed of a human, but there are also cases where zombies edge them self forward with only one arm. This result in a major difference in speed and therefore a lower average speed for the zombies.
* $D_r=0$, The removed are here seen as dead, therefore there are no moving speed.
<linebreak>
<linebreak>
The parameters from (ref{table:param_val}) will be used here and the three phases will be modeled as shown for the uniformed distributed PDE system. This will be done for three different simulations with similar initial value for the susceptible class. The initial value can be seen in figure(ref{fig:initial_value_susceptible}) and are based on the data given above. The difference in the three different simulations will be the placement of the zombie at initial time. The zombie will be placed in center of the small, middle and large town.

FIGURE: [plots/initial_value_susceptible.png, height=600 width=800 frac=0.8] label{fig:initial_value_susceptible}

The figure() shows the simulation where the zombie is placed in the small town. The four subplots are from the different phases that arise under a zombie attack. The different classes have the same color as introduced in figure(ref{fig:zombie_three_number}). It is a challenge to separate the three groups *Infected*,*Zombie* and *Removed*, since they all have a low value at initial time. The development of the amount can easier be seen in the figure(), which also shows the result from the placement in the middle and large group. Since the amount of *Susceptible* is quite low in the small town where the Zombie arise, the disease is not able to infect to many before the society has moved to the next phase. Assuming that the broadcasting works okay for the first days. This result in a eradication of the disease in about a month. The table() shows that the number of zombies decrease towards zero after a month. 

FIGURE:[plots/2D_zombie_three_phases_zombie_large_town_2_sub.png, height=600 width=800 frac=0.8]

By placing the Zombie in the middle town, the amount of zombies increase to a much higher level. The amount can be seen as the second sub figure in figure(). The damages are higher and after a month the total population of *Susceptible* will be reduced to around (300). The simulation can be seen in the Appendix. The last calculation done in the large town shows the major damages. Here the amount of zombies increase above the number of *Susceptible*. The *Infected* class also increase towards 100 around in the infected phase. This can be explained by the high number of meeting between susceptible and zombies. A plot that shows each class is produced for this simulation. This give a better overview of the concentration of the four groups during this simulation. Since the diffusion term for the *Removed* group is sat to zero, the *Removed* subplots gives an indication on the placement of the deaths. This seems to be grouped in the city. The amount of zombies also seems to be higher here. The major amount of *Susceptible* are in the middle town. This area was able to avoid the damages from the initial phase.


The result from the uniformed distributed simulation still is much higher for the *Zombie* class then for the large town. This shows that by using the parameters from the ODE system in a geographic area give no sense. A realistic assumption is that a zombie is restricted to a given area. Therefore the parameters will not be equal for all. The chance of getting infected is much higher if a susceptible is closed to an infected. There is also a greater chance of getting infected if the susceptible stay in a crowded area.

FIGURE:[plots/2D_compare_towns.png, height=1000 width=400 frac=0.8]

label{table:compare_phases_zombie}
|-----------------------------------------------------------------------|
|                   |Small town |Middle town 	|Large 			|
|-----------------------------------------------------------------------|
|Initial phase      |-----------|-------------------|-------------------|
|-----------------------------------------------------------------------|
|Susceptible        |603.74     |433.22            |259.20           	|
|Infected           |2.96       |25.51             |50.94            	|
|Zombie             |13.79      |155.27            |297.24           	|
|Removed            |0.66       |7.16              |13.78              	|
|-----------------------------------------------------------------------|
|Hysterical phase   |-----------|-------------------|-------------------|
|-----------------------------------------------------------------------|
|Susceptible        |604.42     |429.35             |251.14             |
|Infected           |0.03       |0.18               |0.35               |
|Zombie             |6.25       |87.31              |178.45             |
|Removed            |12.14      |106.00             |192.90             |
|-----------------------------------------------------------------------|
|Counter attack     |-----------|-------------------|-------------------|
|-----------------------------------------------------------------------|
|Susceptible        |604.21     |427.45              |247.33            |
|Infected           |0.08       |0.59                |1.17              |
|Zombie             |4.49       |73.70               |151.44            |
|Removed            |14.11      |121.16              |222.96            |
|-----------------------------------------------------------------------|
## dt = 34/68000
## dx = 40/800

===== Lock in different areas =====

To model a realistic zombie attack, humans ability to think logic is crucial in the fight. The moving speed was presented as a factor in the previous section. Another important skill that the *Susceptible* class hold, is the ability to decide if an area is safe. In the TV series *Walking Dead*, the humans build barricades to keep the zombies outside. This give the *Susceptible* class free areas where they can stay. This idea can be transfer to the PDE system by rewrite the system (ref{eq:seland_model}) with spatial dependent diffusion term. The diffusion constant $D_u$ is now replaced with a diffusion function $\gamma_u(x)$ for $u= S,I,Z,R$ which is spatial discretized.

!bt
\begin{equation} label{eq:seland_model_diff}
    \begin{aligned} 
    \frac{\partial S}{\partial t} =& \Sigma -(\beta+\mu \omega(t))SZ - \delta_SS +\nabla(\gamma_S(x) \nabla S) \\
    \frac{\partial I}{\partial t} =& (\beta+\mu \omega(t))SZ - \varrho I - D_i\delta_II+\nabla(\gamma_I(x) \nabla I)\\
    \frac{\partial Z}{\partial t} =& \varrho I- (\alpha+\omega(t))SZ + \zeta R+\nabla(\gamma_Z(x) \nabla Z)\\
    \frac{\partial R}{\partial t} =& \delta_SS +\delta_II -\zeta R + (\alpha+\omega(t))SZ+\nabla(\gamma_R(x) \nabla R) 
    \end{aligned}
\end{equation}
!et

The difference for this system compared with (ref{eq:seland_model}) is the diffusion term in each equation. The discretization can be shown for for a general $\gamma$. This will be similar for all classes. A Crank nicolson discretization is used in space.

!bt
\begin{equation} label{eq:gamma}
    \begin{aligned}
    &=\nabla(\gamma(x) \nabla S) \\
    &=(\gamma(x) S_x)_x+(\gamma(x) S_y)_y \\
    &= \left(\gamma(x) \frac{S^{n}_{i+1/2,j}-S^{n}_{i-1/2,j}}{\Delta x}\right)_x+\left(\gamma(x) \frac{S^{n}_{i,j+1/2}-S^{n}_{i,j-1/2}}{\Delta y}\right)_y \\
    &= \left(\frac{\gamma(x_{i+1/2,j})(S^{n}_{i+1,j}-S^{n}_{i,j})-\gamma(x_{i-1/2,j})(S^{n}_{i,j}-S^{n}_{i-1,j})}{\Delta x^2}\right)+\left(\frac{\gamma(x_{i,j+1/2})(S^{n}_{i,j+1}-S^{n}_{i,j})-\gamma(x_{i,j-1/2})(S^{n}_{i,j}-S^{n}_{i,j-})}{\Delta y^2}\right)
    \end{aligned}
\end{equation}
!et
Since the calculation is based on spatial points, the values inside the function of $\gamma$ need to be adjusted. This can be done by an aritmetic mean, which can be seen in eq(ref{eq:arith_mean}). The writing $q_{i+1/2}$ is used for the function $q(x_{i+1/2})$ with $x_{i+1/2} = x_i + 1/2 \Delta x$
!bt
\begin{equation} label{eq:arith_mean}
q_{i+1/2} \approx \frac{1}{2}(q_i +q_{i+1})
\end{equation}
!et
This arithmetic mean can be inserted for all $\gamma$'s in the system.By cleaning up, the system can be expressed.
!bt
\begin{equation} label{eq:SIZR_disc3}
	\begin{aligned}
    S^{n+1}_{i,j} &= S^n_{i,j} + \Delta t \left( \Sigma - (\beta+\mu \omega(t))S^{n}_{i,j}Z^{n}_{i,j}- \delta_S S^{n}_{i,j}+\
        \frac{1}{2\Delta x^2}\left(\gamma_S(x_{i-1,j})(S^{n}_{i-1,j}-S^{n}_{i,j})+\gamma_S(x_{i,j})(S^{n}_{i-1,j}-2S^{n}_{i,j}+S^{n}_{i+1,j})+\gamma_S(x_{i+1,j})(-S^{n}_{i,j}+S^{n}_{i+1,j})\right)+\
        \frac{1}{2\Delta y^2}\left(\gamma_S(x_{i,j-1})(S^{n}_{i,j-1}-S^{n}_{i,j})+\gamma_S(x_{i,j})(S^{n}_{i,j-1}-2S^{n}_{i,j}+S^{n}_{i,j+1})+\gamma_S(x_{i,j+1})(-S^{n}_{i,j}+S^{n}_{i,j+1})\right)\right)\\
    I^{n+1}_{i,j} &= I^n_{i,j} + \Delta t \left((\beta+\mu \omega(t))S^{n}_{i,j}Z^{n}_{i,j}-\varrho I^{n}_{i,j}- \delta_I I^{n}_{i,j}+\
        \frac{1}{2\Delta x^2}\left(\gamma_I(x_{i-1,j})(I^{n}_{i-1,j}-I^{n}_{i,j})+\gamma_I(x_{i,j})(I^{n}_{i-1,j}-2I^{n}_{i,j}+I^{n}_{i+1,j})+\gamma_I(x_{i+1,j})(-I^{n}_{i,j}+I^{n}_{i+1,j})\right)+\
        \frac{1}{2\Delta y^2}\left(\gamma_I(x_{i,j-1})(I^{n}_{i,j-1}-I^{n}_{i,j})+\gamma_I(x_{i,j})(I^{n}_{i,j-1}-2I^{n}_{i,j}+I^{n}_{i,j+1})+\gamma_I(x_{i,j+1})(-I^{n}_{i,j}+I^{n}_{i,j+1})\right)\right)\\
    Z^{n+1}_{i,j} &= Z^n_{i,j} +\Delta t \left( \varrho I^{n}_{i,j}-(\alpha+\omega(t))S^{n}_{i,j}Z^{n}_{i,j}+ \zeta R^{n}_{i,j}+\
        \frac{1}{2\Delta x^2}\left(\gamma_Z(x_{i-1,j})(Z^{n}_{i-1,j}-Z^{n}_{i,j})+\gamma_Z(x_{i,j})(Z^{n}_{i-1,j}-2Z^{n}_{i,j}+Z^{n}_{i+1,j})+\gamma_Z(x_{i+1,j})(-Z^{n}_{i,j}+Z^{n}_{i+1,j})\right)+\
        \frac{1}{2\Delta y^2}\left(\gamma_Z(x_{i,j-1})(Z^{n}_{i,j-1}-Z^{n}_{i,j})+\gamma_Z(x_{i,j})(Z^{n}_{i,j-1}-2Z^{n}_{i,j}+Z^{n}_{i,j+1})+\gamma_Z(x_{i,j+1})(-Z^{n}_{i,j}+Z^{n}_{i,j+1})\right)\right)\\
    R^{n+1}_{i,j} &= R^n_{i,j} +\Delta t \left(\delta_S S^{n}_{i,j}+\delta_I I^{n}_{i,j}-\zeta R^{n}_{i,j}+(\alpha+\omega(t))S^{n}_{i,j}Z^{n}_{i,j}\right)
	\end{aligned}
\end{equation}
!et
The diffusion term for the *Removed* class is take away, since dead people are not able to move. This system looks quite messy, but it is straight forward to calculate. All values on the right side are known values and the system is easy to solve. Now every point will has its own diffusion constant. This makes it easier to control the flow in each class. With a high diffusion constant, the diffusion will spread fast. When the diffusion constant goes towards zero, the flow will go towards a steady state. This will result in a set of ODE systems modeled for each point.
##S &= \nabla\left(\gamma(x) \nabla S)\right \\
=== Ten minutes at Frederikkeplassen ===
Frederikkeplassen at the university is an area for an upcoming zombie attack. This simulation will try to model a ten minutes sequence with the diffusion parameter added in this section. Since students often learn and interact fast, they will only use three minutes before they realise the danger and goes into the *Hysterical phase*. A map of Frederikkeplassen is used to define the safe and non save areas. The buildings are set as areas where only the *Susceptible* are allowed to move. This is done by setting the diffusion constant to zero for the *Zombie* and *Infected* class. Since the buildings will be safe spots for the *Susceptible*, an idea would be to express this in the diffusion term. This more difficult, since the concentrations in each class wants to go towards equilibrium. A way to delay this process is by setting the diffusion constant to be low in the buildings and high outside. This will result in a fast diffusion in the open areas and 


FIGURE:[plots/2D_Frederikke_contourf_sub.png, height=600 width=800 frac=0.8]

FIGURE:[plots/2D_compare_Frederikke.png, height=400 width=800 frac=0.8]




##Free Areas
##time=0.000000
##Susceptible = 618.35
##Infective = 	0.00
##Zombies = 1.00
##Removed = 0.00
##time=3.000000
##Susceptible = 	252.72
##Infective = 	75.69
##Zombies = 	276.55
##Removed = 	13.94
##time=7.000000
##Susceptible = 	251.35
##Infective = 	0.51
##Zombies = 	325.54
##Removed = 	41.26
##time=10.000000
##Susceptible = 	249.84
##Infective = 	0.38
##Zombies = 	295.71
##Removed = 	72.36
##
##compare with uniform distributed
##time=0.000000
##Susceptible = 	618.35
##Infective = 	0.00
##Zombies = 1.00
##Removed = 0.00
##time=3.000000
##Susceptible =	72.23
##Infective = 	229.65
##Zombies = 	296.67
##Removed = 	20.84
##time=7.000000
##Susceptible = 	70.78
##Infective = 	0.83
##Zombies = 	498.72
##Removed = 	49.12
##time=10.000000
##Susceptible = 	69.69
##Infective = 	0.25
##Zombies = 	479.00
##Removed = 	70.55
##
##time=3.000000
##Susceptible = 	524.77
##Infective = 	26.07
##Zombies = 	66.51
##Removed = 	3.66
##time=7.000000
##Susceptible = 	524.23
##Infective = 	0.20
##Zombies = 	81.88
##Removed = 	14.80
##time=10.000000
##Susceptible = 	523.61
##Infective = 	0.16
##Zombies = 	69.67
##Removed = 	27.77
-
|--------------------------------------------------------------------------------|
|                   |Uniform distribution	|Free areas	|Random placement|
|--------------------------------------------------------------------------------|
|3 Minutes          |---------------------------|---------------|----------------|
|--------------------------------------------------------------------------------|
|Susceptible        |72.23                     	|252.72         |524.77       	 |
|Infected           |229.65                    	|75.69          |26.07       	 |
|Zombie             |296.67                    	|276.55         |66.51       	 |
|Removed            |20.84                     	|13.94          |3.66          	 |
|--------------------------------------------------------------------------------|
|7 Minutes          |---------------------------|---------------|----------------|
|--------------------------------------------------------------------------------|
|Susceptible        |70.78                    	|251.35         |524.23          |
|Infected           |0.83                     	|0.51           |0.20            |
|Zombie             |498.72                   	|325.54         |81.88           |
|Removed            |49.12                    	|41.26          |14.80           |
|--------------------------------------------------------------------------------|
|10 Minutes         |---------------------------|---------------|----------------|
|--------------------------------------------------------------------------------|
|Susceptible        |69.69                     	|249.84         |523.61          |
|Infected           |0.25                      	|0.38           |0.16            |
|Zombie             |479.00                    	|295.71         |69.67           |
|Removed            |70.55                     	|72.36          |27.77           |
|--------------------------------------------------------------------------------|

=== random distribution ===

FIGURE:[plots/2D_Frederikke_random_contourf_sub.png, height=600 width=800 frac=0.8]




!split
======= Appendix =======
=== Sympy to find manufactured solution ===

!bc pycod
>>> from sympy import *
>>> x,t,lam = symbols('x t lam')
>>> def s_simple(x,t):
...     return cos(pi*x)*t
... 
>>> def i_simple(x,t):
...     return cos(pi*x)*t
... 
>>> def r_simple(x,t):
...     return cos(pi*x)*t
... 
>>> for x_point in 0,1:
...     print "s_x(%s,t): ", % x_point,
>>> for x_point in 0,1:
...     print "s_x(%s,t): " % x_point,
...     print diff(s_simple(x,t),x).subs(x,x_point).simplify()
...     print "i_x(%s,t): " % x_point,
...     print diff(i_simple(x,t),x).subs(x,x_point).simplify()
...     print "r_x(%s,t): " % x_point,
...     print diff(r_simple(x,t),x).subs(x,x_point).simplify()
... 
s_x(0,t):  0
i_x(0,t):  0
r_x(0,t):  0
s_x(1,t):  0
i_x(1,t):  0
r_x(1,t):  0
>>> s = s_simple(x,t)
>>> i = i_simple(x,t)
>>> r = r_simple(x,t)
>>> f = diff(s,t)+i*s-diff(diff(s,x),x)
>>> print f.simplify()
(t**2*cos(pi*x) + pi**2*t + 1)*cos(pi*x)
>>> g = diff(i,t)-i*s+lam*i-diff(diff(i,x),x)
>>> print g.simplify()
(lam*t - t**2*cos(pi*x) + pi**2*t + 1)*cos(pi*x)
>>> h = diff(r,t)-lam*i-diff(diff(r,x),x)
>>> print h.simplify()
(-lam*t + pi**2*t + 1)*cos(pi*x)
!ec
===== Discretization =====
!bt
\begin{equation} \label{eq:LMR_model}
	\begin{aligned} 
	\frac{dS}{dt} =& \Sigma -\beta SZ - \delta_SS + \nabla(\gamma_s(x)\nabla S) \\
	\frac{dI}{dt} =& \beta SZ - \varrho I - \delta_II+\nabla(\gamma_I(x)\nabla I)\\
	\frac{dZ}{dt} =& \varrho I- (\alpha+\omega(t))SZ + \zeta R+ \nabla(\gamma_Z(x)\nabla Z)\\
	\frac{dR}{dt} =& \delta_SS +\delta_II -\zeta R + (\alpha+\omega(t))SZ 
	\end{aligned}
\end{equation}
!et
The calculations will be shown for the diffusion part in the first equation. This idea will be used for the whole system

!bt
\begin{equation}
	\begin{aligned}
	\frac{dS}{dt} =& \nabla(\gamma_s(x)\nabla S) \\
    \frac{S^{n+1}_{i,j}-S^n_{i,j}}{\Delta t} &= \left(\gamma(x_{i+1/2,j})\frac{S^{n}_{i-1,j}-2S^{n}_{i,j}+S^{n}_{i+1,j}}{\Delta x}+\frac{S^{n}_{i,j-1}-2S^{n}_{i,j}+S^{n}_{i,j+1}}{\Delta y}\right) 
	\end{aligned}
\end{equation}
!et
===== 2D Gaussian function from x=0 =====

FIGURE:[plots/2D_gauss_sub.png,height=600 width=800 frac=0.8]The PDE system (ref{eq:simple_non_PDE}) simulated for a 2D system with $\lambda=0.5$. A gauss wave from $x=0$.

===== 2D Gaussian function from x=0,y=0 =====

FIGURE:[plots/2D_gauss_one_sub.png,height=600 width=800 frac=0.8]A gaussian function from $x=0,y=0$ based on the PDE system (ref{eq:simple_non_PDE}) with $\lambda=0.5$  

===== 2D Gaussian function from x=0,y=0 with higher initial value ===== 

===== English Boarding School =====

FIGURE:[plots/2D_british_school_sub.png, height=600 width=800 frac=0.8]

=== Gaussian from the corner ===

FIGURE:[plots/2D_british_school_gauss_corner_sub.png, height=600 width=800 frac=0.8]

=== A long simulation on 100 Days ===

FIGURE:[plots/2D_british_school_long_number.png, height=600 width=800 frac=0.8]

FIGURE:[plots/2D_british_school_gauss_long_number.png, height=600 width=800 frac=0.8]

FIGURE:[plots/2D_british_school_gauss_corner_long_number.png, height=600 width=800 frac=0.8]

===== Zombiefication =====
=== Verify the initial phase ===

FIGURE:[plots/2D_zombie_initial_cond_sub.png, height=600 width=800 frac=0.8]

FIGURE:[plots/2D_zombie_initial_cond_number.png, height=600 width=800 frac=0.8]Creates the same results as for the ODE system

=== Three phases ===

FIGURE:[plots/2D_zombie_three_phases_sub.png, height=600 width=800 frac=0.8]

=== middle town ===

FIGURE:[plots/2D_zombie_three_phases_zombie_middle_town_surface_sub.png, height=600 width=800 frac=0.8]

=== large town ===

FIGURE:[plots/2D_zombie_three_phases_zombie_large_town_sub.png, height=600 width=800 frac=0.8]

## Movies
#MOVIE:[plots/2D_gaussian.webm, height=500 width=600] Travelling wave modeled with the same values as for 1D.
#MOVIE:[plots/2D_one_corner.webm, height=500 width=600] Starting the travelling wave from the corner.
#MOVIE:[plots/2D_initial_variable.webm, height=500 width=600] Travelling wave with a greater initial wave.
#MOVIE:[plots/2D_british_school.webm, height=500 width=600] Acts like the ODE system
#MOVIE:[plots/2D_british_school_gauss.webm, height=500 width=600] The sick one is placed in the center of the School area.
#MOVIE:[plots/2D_british_school_gauss_corner.webm, height=500 width=600] A wave of infected moves towards the school yard
#MOVIE:[plots/2D_zombie_initial_cond.webm, height=500 width=600] 
#MOVIE:[plots/2D_zombie_three_phases.webm, height=500 width=600]
#MOVIE:[plots/2D_zombie_three_phases_zombie_small_town.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
#MOVIE:[plots/2D_zombie_three_phases_zombie_small_town_surface.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
#MOVIE:[plots/2D_zombie_three_phases_zombie_middle_town.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
#MOVIE:[plots/2D_zombie_three_phases_zombie_middle_town_surface.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
#MOVIE:[plots/2D_zombie_three_phases_zombie_large_town.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
#MOVIE:[plots/2D_zombie_three_phases_zombie_large_town_surface.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
#MOVIE:[plots/2D_zombie_three_phases_blindern_area_contourf.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 
#MOVIE:[plots/2D_zombie_three_phases_blindern_area_3_ph_contourf.webm, height=500 width=600] Created with different diffusion constants. The groups of susceptible are placed in three different areas. 

##======= Bibliography =======

##BIBFILE: $HOME/torbjhse/Dropbox/Torbjørn/Skole/master/bibliography/papers.pub
##BIBFILE: ~/torbjhse/Dropbox/Torbjørn/Skole/master/bibliography/papers.pub
##BIBFILE: ~/home/torbjhse/Dropbox/Torbjørn/Skole/master/bibliography/papers.pub
BIBFILE: ../bibliography/papers.pub
